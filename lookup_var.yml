---
- name: vars lookup pulgin
  hosts: localhost
  gather_facts: no
  vars:
    enable_system: yes
    enable_docker: yes
    enable_haproxy: no
    var_names:
      - enable_system
      - enable_docker
      - enable_haproxy
    var_names2:
      - enable_system
      - enable_docker
      - enable_memcache
    module_names:
      - system
      - memcache
      - docker
      - haproxy

  tasks:
    - name: test
      debug:
        msg:
          -  "{{ lookup('vars', 'enable_system', 'enable_docker') }}"
          -  "{{ lookup('vars', *var_names) }}"
          -  "{{ lookup('vars', default='None', *var_names2) }}"
          -  "{{ var_names2
                 | zip(lookup('vars', default='None', *var_names2)) |list }}"
    - name: make var names
      set_fact:
        var_names3: "{{ [] | zip_longest(module_names, fillvalue='enable_')
                        | map('join') | list }}"
    - name: test2
      debug:
        msg:
          - "{{ var_names3 }}"
          - "{{ var_names3
             | zip(lookup('vars', default='undefined', *var_names3))
             | list | to_json | from_json
             | json_query('[? type(@[1]) == `boolean` ]') }}"
    - name: make varname value tuple
      set_fact:
        # "to_json | from_json" converts to ansible style of json
        name_val: "{{ module_names
             | zip(lookup('vars', default='undefined', *var_names3))
             | list | to_json | from_json }}"
    - debug:
        msg:
          - "{{ name_val | json_query('[? type(@[1]) == `boolean` ]') }}"
          - "{{ name_val | json_query('[? @[1] ==`true` ]') }}"
